
@online{cakelabsinc-BigNotationUsing2020,
  title = {Big {{O Notation}}: Using Not-Boring Math to Measure Code's Efficiency},
  shorttitle = {Big {{O Notation}}},
  author = {{Cake Labs, Inc.}},
  date = {2020-12-02},
  url = {https://www.interviewcake.com/article/javascript/data-structures-coding-interview},
  urldate = {2020-12-02},
  langid = {english},
  organization = {{Interview Cake}}
}

@online{cakelabsinc-DataStructuresCoding2020,
  title = {Data {{Structures}} for {{Coding Interviews}}},
  shorttitle = {Data {{Structures}} for {{Coding Interviews}}},
  author = {{Cake Labs, Inc.}},
  date = {2020-12-02},
  url = {https://www.interviewcake.com/article/javascript/data-structures-coding-interview},
  urldate = {2020-12-02},
  abstract = {Finally, a dead-simple explanation of CS data structures (linked lists, hash maps, etc.). No CS degree necessary. No proofs, and no confusing academic jargon.},
  langid = {english},
  organization = {{Interview Cake}}
}

@online{cakelabsinc-LogarithmsHowThink2020,
  title = {Logarithms: {{How}} to Think about Them, Especially in Programming Interviews and Algorithm Design},
  author = {{Cake Labs, Inc.}},
  date = {2020-12-03},
  url = {https://www.interviewcake.com/article/javascript/logarithms},
  urldate = {2020-12-02},
  abstract = {How logarithms come up in coding interviews, and how to think about them. Examples: binary search, merge sort, and binary trees.},
  langid = {english},
  organization = {{Interview Cake}}
}

@video{edx-harvarduniversity-etal-CS502019Lecture2019,
  title = {{{CS50}} 2019 - {{Lecture}} 0 - {{Computational Thinking}}, {{Scratch}}},
  date = {2019-09-15},
  volume = {1},
  location = {{Harvard University}},
  url = {https://www.youtube.com/watch?v=jjqgP9dpD1},
  urldate = {2020-12-04},
  abstract = {TABLE OF CONTENTS 00:00:00 - Introduction 00:02:35 - Representation 00:06:02 - Binary 00:09:17 - Binary Bulbs (Demo) 00:12:22 - Representing Letters 00:14:08 - Abstraction 00:15:35 - Unicode 00:17:21 - RGB 00:19:38 - Representing Images and Video 00:21:28 - Finding Mike Smith 00:24:54 - Solving Problems Effectively 00:28:20 - Pseudocode 00:31:18 - Scratch 00:33:16 - The Scratch Editor 00:39:58 - meow 00:42:22 - count0 00:43:42 - pet0 00:44:42 - pet1 00:45:25 - bounce0 00:48:15 - bounce1 00:48:49 - bark 00:50:38 - marco 00:52:19 - cough 00:54:03 - Custom Blocks 00:56:09 - Oscartime 00:58:21 - Ivy's Hardest Game TOPICS * Problem solving * Inputs, Outputs * Representation * Unary, Binary, Decimal * Abstraction * ASCII, Unicode * RGB * Algorithms * Running Time * Pseudocode * Scratch   * Functions, Arguments, Return Values   * Variables   * Boolean Expressions, Conditions   * Loops   * Events   * Threads *** This is CS50, Harvard University's introduction to the intellectual enterprises of computer science and the art of programming. Demanding, but definitely doable. Social, but educational. A focused topic, but broadly applicable skills. CS50 is the quintessential Harvard course. FALL 2019 https://www.youtube.com/playlist?list... *** HOW TO SUBSCRIBE http://www.youtube.com/subscription\_c... HOW TO TAKE CS50 edX: https://cs50.edx.org/ Harvard Extension School: https://cs50.harvard.edu/extension Harvard Summer School: https://cs50.harvard.edu/summer OpenCourseWare: https://cs50.harvard.edu/x HOW TO JOIN CS50 COMMUNITIES Discord: https://discord.gg/T8QZqRx Ed: https://cs50.harvard.edu/x/ed Facebook Group: https://www.facebook.com/groups/cs50/ Faceboook Page: https://www.facebook.com/cs50/ GitHub: https://github.com/cs50 Gitter: https://gitter.im/cs50/x Instagram: https://instagram.com/cs50 LinkedIn Group: https://www.linkedin.com/groups/7437240/ LinkedIn Page: https://www.linkedin.com/school/cs50/ Quora: https://www.quora.com/topic/CS50 Slack: https://cs50.edx.org/slack Snapchat: https://www.snapchat.com/add/cs50 Twitter: https://twitter.com/cs50 YouTube: http://www.youtube.com/cs50 HOW TO FOLLOW DAVID J. MALAN Facebook: https://www.facebook.com/dmalan GitHub: https://github.com/dmalan Instagram: https://www.instagram.com/davidjmalan/ LinkedIn: https://www.linkedin.com/in/malan/ Quora: https://www.quora.com/profile/David-J... Twitter: https://twitter.com/davidjmalan *** CS50 SHOP https://cs50.harvardshop.com/ *** LICENSE CC BY-NC-SA 4.0 Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International Public License https://creativecommons.org/licenses/... David J. Malan https://cs.harvard.edu/malan malan@harvard.edu},
  editora = {{edX} and {Harvard University} and Malan, David J.},
  editoratype = {collaborator},
  langid = {american},
  series = {{{CS50}}},
  volumes = {9}
}

@book{ingermanson-HowWriteNovel2014,
  title = {How to {{Write}} a {{Novel Using}} the {{Snowflake Method}}},
  author = {Ingermanson, Randall},
  date = {2014-07-16},
  edition = {1st},
  publisher = {{Ingermanson Communications, Inc.}},
  url = {https://www.amazon.com/dp/B00LWBZ696?tag=advancedfictionwriting-20},
  isbn = {978-1-5005-7405-5},
  langid = {english},
  number = {1},
  pagetotal = {235},
  series = {Advanced {{Fiction Writing}}}
}

@unpublished{neagoie-23SectionOverview2020,
  title = {23. {{Section Overview}}},
  author = {Neagoie, Andrei},
  date = {2020-12},
  url = {https://www.udemy.com/course/master-the-coding-interview-data-structures-algorithms/learn/lecture/12133482#overview},
  urldate = {2020-12-09},
  abstract = {A short overview of Big O.},
  langid = {english},
  type = {Udemy}
}

@unpublished{neagoie-25WhatGood2020,
  title = {25. {{What Is Good Code}}?},
  author = {Neagoie, Andrei},
  date = {2020-12},
  url = {https://www.udemy.com/course/master-the-coding-interview-data-structures-algorithms/learn/lecture/12133484#overview},
  urldate = {2020-12-09},
  abstract = {A discussion of what makes code 'good'.},
  langid = {english},
  type = {Udemy}
}

@unpublished{neagoie-26BigScalability2020,
  title = {26. {{Big O}} and {{Scalability}}},
  author = {Neagoie, Andrei},
  date = {2020-12},
  url = {https://www.udemy.com/course/master-the-coding-interview-data-structures-algorithms/learn/lecture/12133490#overview},
  urldate = {2020-12-09},
  abstract = {A discussion of how Big O notation describes scalability of algorithms.},
  langid = {english},
  type = {Udemy}
}

@unpublished{neagoie-33SimplifyingBig2020,
  title = {33. {{Simplifying Big O}}},
  author = {Neagoie, Andrei},
  date = {2020-12},
  url = {https://www.udemy.com/course/master-the-coding-interview-data-structures-algorithms/learn/lecture/12145932#overview},
  urldate = {2020-12-09},
  abstract = {An overview of the steps taken to simplify Big O expressions},
  langid = {english},
  type = {Udemy}
}

@unpublished{neagoie-35BigRule2020,
  title = {35. {{Big O Rule}} 2},
  author = {Neagoie, Andrei},
  date = {2020-12},
  url = {https://www.udemy.com/course/master-the-coding-interview-data-structures-algorithms/learn/lecture/12145938#overview},
  urldate = {2020-12-09},
  abstract = {A demonstration of Big O Rule 2: 'Remove Constants'},
  langid = {english},
  type = {Udemy}
}

@unpublished{neagoie-36BigRule2020,
  title = {36. {{Big O Rule}} 3},
  author = {Neagoie, Andrei},
  date = {2020-12},
  url = {https://www.udemy.com/course/master-the-coding-interview-data-structures-algorithms/learn/lecture/12145940#overview},
  urldate = {2020-12-09},
  abstract = {A demonstration of Big O Rule 3: 'Different Terms for Inputs'},
  langid = {english},
  type = {Udemy}
}

@unpublished{neagoie-372020,
  title = {37. {{O}}(N\^2)},
  author = {Neagoie},
  date = {2020-12},
  url = {https://www.udemy.com/course/master-the-coding-interview-data-structures-algorithms/learn/lecture/12145942#overview},
  urldate = {2020-12-09},
  abstract = {An explanation of quadratic time in Big O.},
  langid = {english},
  type = {Udemy}
}

@unpublished{neagoie-38BigRule2020,
  title = {38. {{Big O Rule}} 4},
  author = {Neagoie, Andrei},
  date = {2020-12},
  url = {https://www.udemy.com/course/master-the-coding-interview-data-structures-algorithms/learn/lecture/12145946#overview},
  urldate = {2020-12-11},
  abstract = {An explanation of Big O Simplification Rule 4: Drop Non Dominants},
  langid = {english},
  type = {Udemy}
}

@online{neagoie-MasterCodingInterview2020,
  title = {Master the {{Coding Interview}}: {{Data Structures}} + {{Algorithms}}},
  shorttitle = {Master the {{Coding Interview}}},
  author = {Neagoie, Andrei},
  date = {2020-12},
  url = {https://www.udemy.com/course/master-the-coding-interview-data-structures-algorithms/},
  urldate = {2020-12-08},
  abstract = {Ultimate coding interview bootcamp. Get more job offers, negotiate a raise: Everything you need to get the job you want!},
  langid = {english},
  organization = {{Udemy}}
}

@online{rowell-KnowThyComplexities,
  title = {Know {{Thy Complexities}}},
  author = {Rowell, Eric},
  url = {https://www.bigocheatsheet.com/},
  urldate = {2020-12-09},
  abstract = {A cheatsheet of sorts for Big O complexities},
  langid = {english},
  organization = {{Big-O Algorithm Complexity Cheat Sheet (Know Thy Complexities!) @ericdrowell}}
}


